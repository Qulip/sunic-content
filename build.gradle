plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4-SNAPSHOT' apply false
	id 'io.spring.dependency-management' version '1.1.7' apply false
}

allprojects {
	group = 'com.sunic'
	version = '0.0.1-SNAPSHOT'
	
	repositories {
		mavenCentral()
		maven { url = 'https://repo.spring.io/snapshot' }
	}
}

subprojects {
	apply plugin: 'java'
	
	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}
	
	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}
	
	dependencies {
		compileOnly 'org.projectlombok:lombok:1.18.30'
		annotationProcessor 'org.projectlombok:lombok:1.18.30'
		
		testImplementation 'org.junit.jupiter:junit-jupiter'
		testImplementation 'org.assertj:assertj-core'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	}
	
	test {
		useJUnitPlatform()
	}
}

// Module-specific configurations
configure(project(':content-spec')) {
	description = 'Domain contracts and specifications'
}

configure(project(':content-aggregate')) {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	description = 'Business logic and data access layer'
	
	bootJar { enabled = false }
	jar { enabled = true; archiveClassifier = '' }
}

configure(project(':content-rest')) {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	description = 'REST API and web layer'
	
	bootJar { enabled = false }
	jar { enabled = true; archiveClassifier = '' }
}

configure(project(':content-client')) {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	description = 'External integration client'
	
	bootJar { enabled = false }
	jar { enabled = true; archiveClassifier = '' }
}

configure(project(':content-boot')) {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	description = 'Application bootstrap and runtime'
	
	bootJar { 
		enabled = true
		archiveClassifier = 'boot'
		archiveFileName = 'content-service.jar'
	}
	jar { enabled = false }
}
